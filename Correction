def computeand(s1, s2):
    num1 = int(s1, 2)
    num2 = int(s2, 2)
    result = num1 & num2
    binary_str = bin(result)[2:] 
    return '0' * (16 - len(binary_str)) + binary_str  
def decimal_to_seven_bit_binary(decimal):
    binary = bin(decimal)[2:]  
    binary = binary.zfill(7)  
    return binary
def computeor(s1, s2):
    num1 = int(s1, 2)
    num2 = int(s2, 2)
    result = num1 | num2
    return format(result, '016b')
def computexor(s1, s2):
    num1 = int(s1, 2)
    num2 = int(s2, 2)
    result = num1 ^ num2
    return format(result, '016b')
def computels(s1, n):
    num = int(s1, 2)
    temp = num << n
    return format(temp, '0' + str(len(s1) + n) + 'b')
def computers(s1, n):
    num = int(s1, 2)
    temp = num >> n
    return format(temp, '016b')
def decimal_to_seven_bit_binary(decimal):
    if decimal < 0 or decimal > 127:
        raise ValueError("Decimal number must be in the range of 0 to 127.")

    binary = bin(decimal)[2:] 
    binary = binary.zfill(7)   
    return binary

